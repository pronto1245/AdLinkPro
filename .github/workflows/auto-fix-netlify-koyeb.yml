name: Auto-fix Netlify + Koyeb Configuration

on:
  workflow_dispatch:
    inputs:
      koyeb_url:
        description: 'Koyeb API URL (without /api suffix)'
        required: false
        default: 'https://central-matelda-pronto12-95b8129d.koyeb.app'
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/auto-fix-netlify-koyeb.yml'
      - 'server/**'
      - 'client/**'

jobs:
  auto-fix-files:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Set variables
      id: vars
      run: |
        KOYEB_URL="${{ github.event.inputs.koyeb_url || 'https://central-matelda-pronto12-95b8129d.koyeb.app' }}"
        echo "koyeb_url=${KOYEB_URL}" >> $GITHUB_OUTPUT
        echo "branch_name=auto-fix/netlify-koyeb-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
        
    - name: Create and checkout new branch
      run: |
        git checkout -b ${{ steps.vars.outputs.branch_name }}

    - name: Create/Update netlify.toml
      run: |
        cat > netlify.toml << 'EOF'
        [build]
          command = "npm run build:client"
          publish = "client/dist"

        [build.environment]
          NODE_VERSION = "18"

        [[redirects]]
          from = "/api/*"
          to = "${{ steps.vars.outputs.koyeb_url }}/api/:splat"
          status = 200
          force = true

        [[redirects]]
          from = "/*"
          to = "/index.html"
          status = 200

        # Health check proxy
        [[redirects]]
          from = "/api/health"
          to   = "${{ steps.vars.outputs.koyeb_url }}/health"
          status = 200
          force  = true

        [[headers]]
          for = "/*"
          [headers.values]
            X-Frame-Options = "DENY"
            X-XSS-Protection = "1; mode=block"
            X-Content-Type-Options = "nosniff"
            Referrer-Policy = "strict-origin-when-cross-origin"
            Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https: wss:; object-src 'none'; base-uri 'self'"

        [[headers]]
          for = "*.css"
          [headers.values]
            Cache-Control = "public, max-age=31536000, immutable"

        [[headers]]
          for = "*.js"
          [headers.values]
            Cache-Control = "public, max-age=31536000, immutable"

        [[headers]]
          for = "*.html"
          [headers.values]
            Cache-Control = "public, max-age=3600"

        [[headers]]
          for = "/api/*"
          [headers.values]
            Cache-Control = "no-cache, no-store, must-revalidate"
        EOF

    - name: Create/Update .env.production
      run: |
        cat > .env.production << 'EOF'
        # === PRODUCTION ENVIRONMENT CONFIGURATION ===
        # Auto-generated by GitHub Actions - DO NOT EDIT MANUALLY

        # React App Configuration
        REACT_APP_API_URL=${{ steps.vars.outputs.koyeb_url }}/api

        # Environment
        NODE_ENV=production

        # === DEPLOYMENT INFO ===
        # Generated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        # Koyeb URL: ${{ steps.vars.outputs.koyeb_url }}
        # Branch: ${{ steps.vars.outputs.branch_name }}
        # Commit: ${{ github.sha }}
        EOF

    - name: Check for changes
      id: changes
      run: |
        git add netlify.toml .env.production
        if git diff --staged --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "No changes detected"
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected"
          git diff --staged --name-only
        fi

    - name: Commit changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git commit -m "🔧 Auto-fix: Update Netlify + Koyeb configuration

        - Update netlify.toml with Koyeb proxy: ${{ steps.vars.outputs.koyeb_url }}
        - Update .env.production with API URL
        - Generated at: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        
        Auto-generated by GitHub Actions workflow"

    - name: Push branch
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git push origin ${{ steps.vars.outputs.branch_name }}

    - name: Create Pull Request
      if: steps.changes.outputs.has_changes == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pullRequest } = await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🔧 Auto-fix: Update Netlify + Koyeb Configuration',
            head: '${{ steps.vars.outputs.branch_name }}',
            base: 'main',
            body: `## 🤖 Автоматическое обновление конфигурации

          Этот PR был создан автоматически для обновления файлов конфигурации.

          ### 📁 Обновленные файлы:
          - \`netlify.toml\` - конфигурация Netlify с прокси на Koyeb
          - \`.env.production\` - переменные среды для продакшена

          ### 🔗 Koyeb Configuration:
          - **API URL**: \`${{ steps.vars.outputs.koyeb_url }}/api\`
          - **Health Check**: \`${{ steps.vars.outputs.koyeb_url }}/health\`

          ### ⚙️ Netlify Settings:
          - ✅ API прокси настроен на Koyeb
          - ✅ SPA routing для React приложения  
          - ✅ Кэширование статических ресурсов
          - ✅ Безопасные HTTP заголовки
          - ✅ CSP политика настроена

          ### 🚀 Deployment Info:
          - **Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          - **Commit**: ${{ github.sha }}
          - **Workflow**: ${{ github.workflow }}

          ### ✅ Ready to merge!
          После мержа файлы будут автоматически применены для деплоя на Netlify.

          ---
          *Создано автоматически GitHub Actions*`
          });

          console.log('Pull request created:', pullRequest.html_url);

    - name: Summary
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        echo "## ✅ Auto-fix completed successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📁 Updated files:" >> $GITHUB_STEP_SUMMARY
        echo "- \`netlify.toml\` - Netlify configuration with Koyeb proxy" >> $GITHUB_STEP_SUMMARY
        echo "- \`.env.production\` - Production environment variables" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Configuration:" >> $GITHUB_STEP_SUMMARY
        echo "- **Koyeb URL**: \`${{ steps.vars.outputs.koyeb_url }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: \`${{ steps.vars.outputs.branch_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Next steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Review the automatically created Pull Request" >> $GITHUB_STEP_SUMMARY
        echo "2. Merge the PR to apply changes" >> $GITHUB_STEP_SUMMARY
        echo "3. Netlify will automatically deploy with new configuration" >> $GITHUB_STEP_SUMMARY

    - name: No changes summary
      if: steps.changes.outputs.has_changes == 'false'
      run: |
        echo "## ℹ️ No changes needed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Configuration files are already up to date." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- \`netlify.toml\` ✅" >> $GITHUB_STEP_SUMMARY
        echo "- \`.env.production\` ✅" >> $GITHUB_STEP_SUMMARY