name: CI/CD Production Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    name: Security & Dependency Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Check for security vulnerabilities
      run: npm audit --audit-level=high

  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Type check
      run: npm run check
    
    - name: Run tests
      run: npm run test
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-for-ci
        SESSION_SECRET: test-session-secret-for-ci
        DATABASE_URL: postgresql://fake:fake@fake:5432/fake

  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    needs: [security-scan, lint-and-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Build application
      run: npm run build
    
    - name: Build client
      run: npm run build:client
      
    - name: Test production build
      run: |
        timeout 10s npm start || echo "Build test completed"
      env:
        NODE_ENV: production
        JWT_SECRET: production-jwt-secret-auto-generated
        SESSION_SECRET: production-session-secret-auto-generated
        DATABASE_URL: postgresql://fake:fake@fake:5432/fake
        SENDGRID_API_KEY: dummy-key
        VOLUUM_TOKEN: dummy-token
        KEITARO_TOKEN: dummy-token
        BINOM_TOKEN: dummy-token
        REDTRACK_TOKEN: dummy-token
        GOOGLE_CLOUD_PROJECT_ID: dummy-project
        GOOGLE_CLOUD_STORAGE_BUCKET: dummy-bucket