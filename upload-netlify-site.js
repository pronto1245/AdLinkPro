#!/usr/bin/env node

import fs from 'fs';
import path from 'path';

// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
async function uploadFiles() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤ –≤ Object Storage...');
    
    // –§–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    const files = [
        'netlify-site/index.html',
        'netlify-site/styles.css', 
        'netlify-site/script.js',
        'netlify-site/netlify.toml',
        'netlify-site/README.md',
        'netlify-site/_headers',
        'netlify-site/_redirects'
    ];
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞
    let token = '';
    try {
        // –ß–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        const tokenFiles = ['.final_token', '.working_token', '.current_token', '.token'];
        for (const tokenFile of tokenFiles) {
            if (fs.existsSync(tokenFile)) {
                token = fs.readFileSync(tokenFile, 'utf8').trim();
                console.log(`üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω –∏–∑ ${tokenFile}`);
                break;
            }
        }
        
        if (!token) {
            console.log('‚ö†Ô∏è  –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ.');
            console.log('üîó –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Object Storage –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ netlify-site/');
            return;
        }
    } catch (error) {
        console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', error.message);
    }
    
    console.log('üìÇ –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –∫ –∑–∞–≥—Ä—É–∑–∫–µ:');
    files.forEach(file => {
        if (fs.existsSync(file)) {
            const stats = fs.statSync(file);
            console.log(`  ‚úÖ ${file} (${(stats.size / 1024).toFixed(1)} KB)`);
        } else {
            console.log(`  ‚ùå ${file} - —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
    });
    
    // –°–≤–æ–¥–∫–∞ –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º
    let totalSize = 0;
    files.forEach(file => {
        if (fs.existsSync(file)) {
            const stats = fs.statSync(file);
            totalSize += stats.size;
        }
    });
    
    console.log(`\nüìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${(totalSize / 1024).toFixed(1)} KB`);
    console.log(`üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: ${files.filter(f => fs.existsSync(f)).length}`);
    
    console.log('\nüéØ –ì–û–¢–û–í–û! –ü–∞–ø–∫–∞ netlify-site/ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Netlify');
    console.log('\nüìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–æ—Ç–æ–≤–æ–π –ø–∞–ø–∫–∏:');
    console.log('  ‚îú‚îÄ‚îÄ index.html       - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º');
    console.log('  ‚îú‚îÄ‚îÄ styles.css       - –ü–æ–ª–Ω—ã–µ —Å—Ç–∏–ª–∏ —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π');
    console.log('  ‚îú‚îÄ‚îÄ script.js        - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏');
    console.log('  ‚îú‚îÄ‚îÄ netlify.toml     - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Netlify');
    console.log('  ‚îú‚îÄ‚îÄ README.md        - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–µ–ø–ª–æ—é');
    console.log('  ‚îú‚îÄ‚îÄ _headers         - HTTP –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
    console.log('  ‚îî‚îÄ‚îÄ _redirects       - –ü—Ä–∞–≤–∏–ª–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
    
    console.log('\nüöÄ –°–ø–æ—Å–æ–±—ã –¥–µ–ø–ª–æ—è –Ω–∞ Netlify:');
    console.log('  1. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –ø–∞–ø–∫—É netlify-site –Ω–∞ netlify.com');
    console.log('  2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ—Ä–µ–∑ Object Storage –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');  
    console.log('  3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —á–µ—Ä–µ–∑ GitHub –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é');
    
    console.log('\nüîó Object Storage URL –¥–ª—è —Ñ–∞–π–ª–æ–≤:');
    console.log('     https://e2b04e37-b05b-4d57-9368-9f629e0035bd-00-2yo71uvl8ejp3.worf.replit.dev/public-objects/');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
uploadFiles().catch(console.error);