#!/bin/bash

# Демонстрация работы auto-fix workflow
echo "🎬 Демонстрация GitHub Actions Auto-fix Workflow"
echo "=================================================="

# Симуляция переменных GitHub Actions
KOYEB_URL="https://central-matelda-pronto12-95b8129d.koyeb.app"
TIMESTAMP=$(date +%Y%m%d-%H%M%S)
BRANCH_NAME="auto-fix/netlify-koyeb-${TIMESTAMP}"
COMMIT_SHA="demo-$(echo $RANDOM | md5sum | head -c 8)"

echo "🔧 Параметры:"
echo "   Koyeb URL: ${KOYEB_URL}"
echo "   Ветка: ${BRANCH_NAME}"
echo "   Коммит: ${COMMIT_SHA}"
echo ""

# Создание demo файлов
echo "📁 Создание файлов конфигурации..."

# Создание netlify.toml
cat > demo-netlify.toml << EOF
[build]
  command = "npm run build:client"
  publish = "client/dist"

[build.environment]
  NODE_VERSION = "18"

[[redirects]]
  from = "/api/*"
  to = "${KOYEB_URL}/api/:splat"
  status = 200
  force = true

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Health check proxy
[[redirects]]
  from = "/api/health"
  to   = "${KOYEB_URL}/health"
  status = 200
  force  = true

[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https: wss:; object-src 'none'; base-uri 'self'"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=3600"

[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
EOF

# Создание .env.production
cat > demo-env.production << EOF
# === PRODUCTION ENVIRONMENT CONFIGURATION ===
# Auto-generated by GitHub Actions - DO NOT EDIT MANUALLY

# React App Configuration
REACT_APP_API_URL=${KOYEB_URL}/api

# Environment
NODE_ENV=production

# === DEPLOYMENT INFO ===
# Generated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
# Koyeb URL: ${KOYEB_URL}
# Branch: ${BRANCH_NAME}
# Commit: ${COMMIT_SHA}
EOF

echo "✅ Файлы созданы!"
echo ""

echo "📄 demo-netlify.toml:"
echo "----------------------"
cat demo-netlify.toml | head -15
echo "   ... (остальная часть файла) ..."
echo ""

echo "📄 demo-env.production:"
echo "-----------------------"
cat demo-env.production
echo ""

echo "🔍 Проверка содержимого:"
echo "========================"

# Проверки
CHECKS_PASSED=0
TOTAL_CHECKS=6

echo -n "1. Netlify proxy для API... "
if grep -q "${KOYEB_URL}/api/:splat" demo-netlify.toml; then
    echo "✅ OK"
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
else
    echo "❌ FAIL"
fi

echo -n "2. Netlify health check... "
if grep -q "${KOYEB_URL}/health" demo-netlify.toml; then
    echo "✅ OK"
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
else
    echo "❌ FAIL"
fi

echo -n "3. React API URL... "
if grep -q "REACT_APP_API_URL=${KOYEB_URL}/api" demo-env.production; then
    echo "✅ OK"
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
else
    echo "❌ FAIL"
fi

echo -n "4. Production environment... "
if grep -q "NODE_ENV=production" demo-env.production; then
    echo "✅ OK"
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
else
    echo "❌ FAIL"
fi

echo -n "5. Заголовки безопасности... "
if grep -q "X-Frame-Options" demo-netlify.toml && grep -q "Content-Security-Policy" demo-netlify.toml; then
    echo "✅ OK"
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
else
    echo "❌ FAIL"
fi

echo -n "6. Кэширование статики... "
if grep -q "Cache-Control.*max-age=31536000" demo-netlify.toml; then
    echo "✅ OK"
    CHECKS_PASSED=$((CHECKS_PASSED + 1))
else
    echo "❌ FAIL"
fi

echo ""
echo "📊 Результат: ${CHECKS_PASSED}/${TOTAL_CHECKS} проверок пройдено"

if [ $CHECKS_PASSED -eq $TOTAL_CHECKS ]; then
    echo "🎉 Все проверки пройдены! Workflow готов к использованию."
else
    echo "⚠️  Некоторые проверки не пройдены. Требуется доработка."
fi

echo ""
echo "🚀 Следующие шаги:"
echo "=================="
echo "1. Зайдите в GitHub Actions"
echo "2. Выберите 'Auto-fix Netlify + Koyeb Configuration'"
echo "3. Нажмите 'Run workflow'"
echo "4. (Опционально) Укажите кастомный Koyeb URL"
echo "5. Нажмите 'Run workflow' для запуска"
echo ""
echo "📋 После выполнения workflow:"
echo "• Будет создана ветка ${BRANCH_NAME}"
echo "• Будут обновлены netlify.toml и .env.production"
echo "• Будет создан Pull Request для review"
echo "• После мержа - автоматический деплой на Netlify"

# Cleanup
rm -f demo-netlify.toml demo-env.production

echo ""
echo "🎬 Демонстрация завершена!"