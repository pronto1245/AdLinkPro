–û—Å–ª–∞–±—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ç—Ä–µ–±—É–π —Ç–æ–ª—å–∫–æ JWT_SECRET)
–ù–∞–π–¥–∏ —Ñ–∞–π–ª —Ç–∏–ø–∞ src/config/env.ts / env.js / bootstrap.ts (–∏—â–∏ –ø–æ process.exit(, JWT_SECRET, zod, joi, yup).

–ó–∞–º–µ–Ω–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é –Ω–∞ —ç—Ç—É (TS/JS –ø–æ–¥–æ–π–¥—ë—Ç –æ–±–æ–∏–º; –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å):

ts
Copy
Edit
// src/config/env.ts
import 'dotenv/config';

const requiredProd = ['JWT_SECRET']; // üö® —Ç–æ–ª—å–∫–æ JWT –≤ –ø—Ä–æ–¥–µ

const missing = requiredProd.filter(k => !process.env[k]?.trim());
if (process.env.NODE_ENV === 'production' && missing.length) {
  console.error('[ENV] Missing required prod vars:', missing.join(', '));
  process.exit(1); // –≤–∞–ª–∏–º—Å—è –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –Ω–µ—Ç JWT_SECRET
}

// –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äî –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º
[
  'SENDGRID_API_KEY','VOLUUM_TOKEN','KEITARO_TOKEN','BINOM_TOKEN','REDTRACK_TOKEN',
  'GOOGLE_PROJECT_ID','GOOGLE_CLOUD_REGION','GCS_BUCKET',
  'GOOGLE_APPLICATION_CREDENTIALS','GOOGLE_CLOUD_CREDENTIALS_JSON'
].forEach(k => { if (!process.env[k]) console.warn(`[ENV] Optional var not set: ${k}`); });

export const env = {
  NODE_ENV: process.env.NODE_ENV ?? 'production',
  PORT: Number(process.env.PORT ?? 3000),
  JWT_SECRET: process.env.JWT_SECRET!, // –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω –≤—ã—à–µ
  // ...–æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–µ—Ä–∏ –ø—Ä—è–º–æ –∏–∑ process.env –ø–æ –º–µ—Å—Ç—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
};
–í–∞–∂–Ω–æ: –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –¥—Ä—É–≥–∏–µ –º–µ—Å—Ç–∞ (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SendGrid/Keitaro/–∏ —Ç.–¥.) –Ω–µ –ø–∞–¥–∞—é—Ç –ø—Ä–∏ –ø—É—Å—Ç—ã—Ö –∫–ª—é—á–∞—Ö. –ï—Å–ª–∏ –ø–∞–¥–∞—é—Ç ‚Äî —Å–º. —à–∞–≥ 2.

2) –°–¥–µ–ª–∞–π –≤–Ω–µ—à–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ¬´–ª–µ–Ω–∏–≤—ã–º–∏¬ª (–Ω–µ –ø–∞–¥–∞—Ç—å –±–µ–∑ –∫–ª—é—á–µ–π)
–ü—Ä–∏–º–µ—Ä –¥–ª—è –ø–æ—á—Ç—ã (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏):

ts
Copy
Edit
// src/services/email.ts
import { env } from '../config/env';

export async function sendEmail(to: string, subject: string, html: string) {
  if (!process.env.SENDGRID_API_KEY) {
    console.warn('[EMAIL] SENDGRID_API_KEY not set ‚Äî skipping send (noop)');
    return { ok: true, skipped: true };
  }
  // ... —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ SendGrid
}
–ü—Ä–∏–º–µ—Ä –¥–ª—è –ø–æ—Å—Ç–±–µ–∫–æ–≤/—Ç—Ä–µ–∫–µ—Ä–æ–≤:

ts
Copy
Edit
// src/services/postback.ts
export async function sendPostback(url: string) {
  if (!url) { console.warn('[POSTBACK] endpoint not configured'); return { ok: true, skipped: true }; }
  // –µ—Å–ª–∏ –Ω—É–∂–µ–Ω —Ç–æ–∫–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å –µ–≥–æ, –∏ –µ—Å–ª–∏ –ø—É—Å—Ç–æ ‚Äî –Ω–µ –ø–∞–¥–∞–π:
  // if (!process.env.KEITARO_TOKEN) { console.warn('...'); return { ok:true, skipped:true }; }
  // ... —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
}
–°–º—ã—Å–ª: –Ω–µ—Ç –∫–ª—é—á–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–∞—Ä–Ω–∏–Ω–≥–æ–º, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ —É–º–∏—Ä–∞–µ—Ç.

3) –ó–∞–¥–∞–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –ø—Ä–æ–¥–µ
–ù—É–∂–Ω–æ –≤—Å–µ–≥–æ —Ç—Ä–∏ ‚Äî —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª–æ:

ini
Copy
Edit
NODE_ENV=production
PORT=3000
JWT_SECRET=<32+ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤>
–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å:

bash
Copy
Edit
openssl rand -base64 48
# –∏–ª–∏
node -e "console.log(require('crypto').randomBytes(48).toString('base64'))"
–ù–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö:

Netlify

bash
Copy
Edit
netlify env:set NODE_ENV production
netlify env:set PORT 3000
netlify env:set JWT_SECRET "<–≤—Å—Ç–∞–≤—å_—Å–µ–∫—Ä–µ—Ç>"
Vercel

bash
Copy
Edit
vercel env add NODE_ENV production
vercel env add PORT 3000
vercel env add JWT_SECRET
Docker Compose

yaml
Copy
Edit
environment:
  NODE_ENV: production
  PORT: 3000
  JWT_SECRET: ${JWT_SECRET}
–ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏/–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –¥–µ–ø–ª–æ–π.

–ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –ø–∞–¥–∞–µ—Ç —Å —Ç–µ–º –∂–µ —Ç–µ–∫—Å—Ç–æ–º
–ó–Ω–∞—á–∏—Ç, –≥–¥–µ-—Ç–æ –µ—â—ë –µ—Å—Ç—å –≤—Ç–æ—Ä–æ–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ server.ts, app.ts, next.config.js, nest main.ts, prisma seed, –∏–ª–∏ –≤ —à–∞–≥–µ CI). –ò—â–µ–º –∏ —á–∏–Ω–∏–º:

–ü–æ–∏—Å–∫ –ø–æ —Ä–µ–ø–æ:
grep -R "SENDGRID_API_KEY" -n
grep -R "process.exit(" -n
grep -R "JWT_SECRET must" -n
‚Äî —É–±–∏—Ä–∞–µ–º ¬´–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å¬ª –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∫—Ä–æ–º–µ JWT_SECRET.

–í CI/–±–∏–ª–¥–µ –æ—Ç–∫–ª—é—á–∏ ¬´–∂—ë—Å—Ç–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏¬ª –∏–ª–∏ –ø–æ–º–µ–Ω—è–π –µ—ë –Ω–∞ warning (–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∑–∞–ø—É—Å–∫–∞—é—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–∞–ø–æ–¥–æ–±–∏–µ node scripts/check-config.js ‚Äî –ø–æ–ø—Ä–∞–≤—å –µ–≥–æ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å —à–∞–≥–æ–º ‚Ññ1).

–£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –Ω–∞ —Å—Ç–∞—Ä—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, new SendGrid(apiKey) –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —Ñ–∞–π–ª–∞). –î–µ–ª–∞–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ ¬´–ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é¬ª, —á—Ç–æ–±—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–ª—é—á–∞ –Ω–µ –ø–∞–¥–∞–ª–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è.

(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –•–µ–ª—Å—á–µ–∫–∏, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ crash-loop —à—É–º–∞
–î–æ–±–∞–≤—å –ø—Ä–æ—Å—Ç—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∏ –æ—Ç–º–µ—á–∞–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:

ts
Copy
Edit
// src/health.ts
import express from 'express';
export const health = express();
let ready = false;

health.get('/livez', (_req,res)=>res.send('ok'));
health.get('/healthz', (_req,res)=> ready ? res.send('ok') : res.status(503).send('not-ready'));
export const setReady = (v:boolean)=>{ ready = v; };
–í –∫–æ–¥–µ —Å—Ç–∞—Ä—Ç–∞:

ts
Copy
Edit
import { setReady } from './health';
// ...–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î/–∫—ç—à–∞/–º–∏–≥—Ä–∞—Ü–∏–π
setReady(true);
–ß—Ç–æ –¥–∞–ª—å—à–µ –ø–æ–¥–∫–ª—é—á–∞—Ç—å –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ
–ö–æ–≥–¥–∞ –¥–µ–ø–ª–æ–π —É–∂–µ –∑–µ–ª—ë–Ω—ã–π, –¥–æ–±–∞–≤–ª—è–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –±–µ–∑ —Ä–∏—Å–∫–∞ –ø–∞–¥–µ–Ω–∏–π:

ini
Copy
Edit
SENDGRID_API_KEY=...
SENDGRID_FROM_EMAIL=no-reply@yourdomain.tld
VOLUUM_TOKEN=...
KEITARO_TOKEN=...
BINOM_TOKEN=...
REDTRACK_TOKEN=...

GOOGLE_PROJECT_ID=...
GOOGLE_CLOUD_REGION=...
GCS_BUCKET=...
# –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ GCP:
# GOOGLE_APPLICATION_CREDENTIALS=/secrets/gcp-sa.json
# –∏–ª–∏ GOOGLE_CLOUD_CREDENTIALS_JSON={"type":"service_account",...}
