#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–∞—à–±–æ—Ä–¥–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç—Ä–∏–∫ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */

const API_BASE = 'http://localhost:5000';
const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjBhYWIzNzIxLTA3ODktNDljNi1hMDhjLThkZmRmZTZmNmFiNiIsInVzZXJuYW1lIjoiYWR2ZXJ0aXNlcjEiLCJyb2xlIjoiYWR2ZXJ0aXNlciIsImFkdmVydGlzZXJJZCI6bnVsbCwiaWF0IjoxNzU0OTA0MjExLCJleHAiOjE3NTQ5OTA2MTF9.tKn8vP2kNR-XoN3yF3A10bxYsF4vMNKOF5l6H1E2nYY';

async function testPerformance() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–∞—à–±–æ—Ä–¥–∞...\n');

  const endpoints = [
    '/api/advertiser/dashboard-metrics',
    '/api/advertiser/live-statistics',
    '/api/notifications',
    '/api/advertiser/offers'
  ];

  for (const endpoint of endpoints) {
    const start = Date.now();
    
    try {
      const response = await fetch(`${API_BASE}${endpoint}`, {
        headers: { 'Authorization': `Bearer ${TOKEN}` }
      });
      
      const end = Date.now();
      const loadTime = end - start;
      
      if (response.ok) {
        const data = await response.json();
        const dataSize = JSON.stringify(data).length;
        
        console.log(`‚úÖ ${endpoint}`);
        console.log(`   –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${loadTime}ms`);
        console.log(`   –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: ${(dataSize / 1024).toFixed(2)}KB`);
        
        if (loadTime > 100) {
          console.log(`   ‚ö†Ô∏è –ú–ï–î–õ–ï–ù–ù–û: ${loadTime}ms > 100ms`);
        }
        console.log('');
      } else {
        console.log(`‚ùå ${endpoint} - ${response.status} ${response.statusText}`);
      }
    } catch (error) {
      console.log(`‚ùå ${endpoint} - –û—à–∏–±–∫–∞: ${error.message}`);
    }
  }
}

testPerformance().catch(console.error);