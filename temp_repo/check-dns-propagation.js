#!/usr/bin/env node

const { exec } = require('child_process');
const { promisify } = require('util');
const execAsync = promisify(exec);

const domain = 'setbet-arbit.ru';
const expectedIP = '34.117.33.233';
const expectedTXT = 'platform-verify=66eb0f916c7c6ebb228adbde1abc189a';

const dnsServers = [
  '8.8.8.8',        // Google
  '1.1.1.1',        // Cloudflare
  '208.67.222.222', // OpenDNS
  '8.8.4.4'         // Google Alternative
];

async function checkDNS() {
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ DNS –¥–ª—è ${domain}...\n`);
  
  let aRecordFound = false;
  let txtRecordFound = false;
  
  for (const server of dnsServers) {
    console.log(`üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS —Å–µ—Ä–≤–µ—Ä: ${server}`);
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º A-–∑–∞–ø–∏—Å—å
      const aCommand = `nslookup ${domain} ${server} | grep "Address:" | grep -v "#53"`;
      const { stdout: aOutput } = await execAsync(aCommand);
      
      if (aOutput && aOutput.includes(expectedIP)) {
        console.log(`‚úÖ A-–∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞: ${expectedIP}`);
        aRecordFound = true;
      } else if (aOutput) {
        console.log(`‚ùå A-–∑–∞–ø–∏—Å—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: ${aOutput.trim()}`);
      } else {
        console.log(`‚ùå A-–∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      }
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ A-–∑–∞–ø–∏—Å–∏: ${error.message}`);
    }
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º TXT-–∑–∞–ø–∏—Å—å
      const txtCommand = `nslookup -type=TXT ${domain} ${server} | grep "text ="`;
      const { stdout: txtOutput } = await execAsync(txtCommand);
      
      if (txtOutput && txtOutput.includes('platform-verify=')) {
        console.log(`‚úÖ TXT-–∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞: ${txtOutput.trim()}`);
        txtRecordFound = true;
      } else {
        console.log(`‚ùå TXT-–∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      }
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ TXT-–∑–∞–ø–∏—Å–∏: ${error.message}`);
    }
    
    console.log('---');
  }
  
  console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:');
  console.log(`A-–∑–∞–ø–∏—Å—å (${expectedIP}): ${aRecordFound ? '‚úÖ –ì–û–¢–û–í–û' : '‚ùå –ù–ï –ì–û–¢–û–í–û'}`);
  console.log(`TXT-–∑–∞–ø–∏—Å—å (–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è): ${txtRecordFound ? '‚úÖ –ì–û–¢–û–í–û' : '‚ùå –ù–ï –ì–û–¢–û–í–û'}`);
  
  if (aRecordFound && txtRecordFound) {
    console.log('\nüéâ DNS –∑–∞–ø–∏—Å–∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–∏–ª–∏—Å—å! –ú–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–æ–º–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.');
    return true;
  } else {
    console.log('\n‚è≥ DNS –∑–∞–ø–∏—Å–∏ –µ—â–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—Ç—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 2-3 –º–∏–Ω—É—Ç—ã.');
    return false;
  }
}

checkDNS();