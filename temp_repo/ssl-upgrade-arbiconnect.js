#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ arbiconnect.store –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π Let's Encrypt

import { LetsEncryptService } from './server/services/letsencrypt.js';

async function upgradeSSL() {
  try {
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Let\'s Encrypt –¥–ª—è arbiconnect.store...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
    await LetsEncryptService.initialize();
    
    console.log('üîí –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–¥–∞—á—É —Ä–µ–∞–ª—å–Ω–æ–≥–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞...');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–¥–∞—á—É —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    const result = await LetsEncryptService.issueRealCertificate(
      'arbiconnect.store',
      '94cacae2-3984-4cc2-8ece-86702b4bc4ac'
    );
    
    if (result.success) {
      console.log('‚úÖ –†–µ–∞–ª—å–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω!');
      console.log('üîê –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ—Ç:', result.issuer);
      console.log('üìÖ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ:', result.validUntil);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ SSL:', result.error);
    }
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  upgradeSSL();
}