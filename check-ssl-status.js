#!/usr/bin/env node

// –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å—Ç–∞—Ç—É—Å–∞
import { db } from './server/db.js';
import { customDomains } from './shared/schema.js';
import { eq } from 'drizzle-orm';

async function checkSSLStatus() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º SSL —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    const domain = await db
      .select()
      .from(customDomains)
      .where(eq(customDomains.domain, 'setbet-arbit.ru'))
      .limit(1);
    
    if (domain.length === 0) {
      console.log('‚ùå –î–æ–º–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ');
      return;
    }
    
    const d = domain[0];
    console.log('üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:');
    console.log(`   –î–æ–º–µ–Ω: ${d.domain}`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${d.status}`);
    console.log(`   SSL –°—Ç–∞—Ç—É—Å: ${d.sslStatus}`);
    console.log(`   SSL –≠–º–∏—Ç–µ–Ω—Ç: ${d.sslIssuer || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    console.log(`   –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: ${d.sslValidUntil || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    console.log(`   –û—à–∏–±–∫–∞: ${d.sslErrorMessage || '–Ω–µ—Ç'}`);
    console.log(`   –ê–∫—Ç–∏–≤–µ–Ω: ${d.isActive}`);
    console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω: ${d.updatedAt}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å
    if (d.sslStatus === 'pending') {
      console.log('');
      console.log('‚ö†Ô∏è SSL —Å—Ç–∞—Ç—É—Å "pending" - –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–∏—Å');
      console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–¥–∞—á–∏ SSL');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
  
  process.exit(0);
}

checkSSLStatus();