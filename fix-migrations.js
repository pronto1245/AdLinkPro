#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å—à–∏–º–∏ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏
 * –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Å—Ö–µ–º—É
 */

import { neon } from '@neondatabase/serverless';
import fs from 'fs';

async function fixMigrations() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏...');
  
  try {
    const sql = neon(process.env.DATABASE_URL);
    
    console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –º–∏–≥—Ä–∞—Ü–∏–π...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –º–∏–≥—Ä–∞—Ü–∏–π
    const migrationTableExists = await sql`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_name = '__drizzle_migrations'
      );
    `;
    
    console.log(`–¢–∞–±–ª–∏—Ü–∞ –º–∏–≥—Ä–∞—Ü–∏–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${migrationTableExists[0].exists}`);
    
    if (migrationTableExists[0].exists) {
      // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –æ –º–∏–≥—Ä–∞—Ü–∏—è—Ö
      const migrations = await sql`SELECT * FROM __drizzle_migrations ORDER BY created_at DESC LIMIT 10`;
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${migrations.length} –∑–∞–ø–∏—Å–µ–π –æ –º–∏–≥—Ä–∞—Ü–∏—è—Ö`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–≥—Ä–∞—Ü–∏—é
      if (migrations.length > 0) {
        console.log('–ü–æ—Å–ª–µ–¥–Ω—è—è –º–∏–≥—Ä–∞—Ü–∏—è:', migrations[0].hash);
      }
    }
    
    console.log('2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ö–µ–º—ã...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
    const tables = await sql`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      ORDER BY table_name
    `;
    
    console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç ${tables.length} —Ç–∞–±–ª–∏—Ü:`);
    tables.forEach(table => console.log(`  - ${table.table_name}`));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –∫–ª—é—á–µ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü
    const keyTables = ['users', 'offers', 'clicks', 'tracking_links'];
    for (const tableName of keyTables) {
      try {
        const count = await sql`SELECT COUNT(*) as count FROM ${sql(tableName)}`;
        console.log(`  ‚úÖ ${tableName}: ${count[0].count} –∑–∞–ø–∏—Å–µ–π`);
      } catch (error) {
        console.log(`  ‚ùå ${tableName}: –æ—à–∏–±–∫–∞ - ${error.message}`);
      }
    }
    
    console.log('3. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    
    if (tables.length >= 10) {
      console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
      console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è');
      console.log('üí° –ú–æ–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ö–µ–º–æ–π');
    } else {
      console.log('‚ö†Ô∏è –°—Ö–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω–æ–π');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π:', error.message);
  }
}

fixMigrations();