#!/usr/bin/env node

/**
 * Seed script –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * –¥–ª—è –≤—Å–µ—Ö —Ç—Ä–µ—Ö —Ä–æ–ª–µ–π (super_admin, advertiser, affiliate)
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç fetch –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏ –∏ –ø–∞—Ä–æ–ª—è–º–∏.
 * 
 * –í–ê–ñ–ù–û: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
 * –ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–µ–∑ endpoint'–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏,
 * —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∂–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.
 */

// –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
const users = [
  {
    email: '9791207@gmail.com',
    username: 'superadmin_georgy',
    password: '77GeoDav=',
    role: 'super_admin',
    firstName: '–ì–µ–æ—Ä–≥–∏–π',
    lastName: '–î–∞–≤—ã–¥–æ–≤',
    company: 'AdLinkPro Platform'
  },
  {
    email: '6484488@gmail.co',
    username: 'advertiser_alex',
    password: '7787877As',
    role: 'advertiser',
    firstName: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
    lastName: '–ü–µ—Ç—Ä–æ–≤',
    company: 'Marketing Agency Ltd'
  },
  {
    email: 'pablota096@gmail.com',
    username: 'affiliate_pablo',
    password: '7787877As',
    role: 'affiliate',
    firstName: '–ü–∞–±–ª–æ',
    lastName: '–¢–∞–ª–∞–Ω–æ–≤',
    company: 'Traffic Source Inc'
  }
];

// –ë–∞–∑–æ–≤—ã–π URL API (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é localhost:5000)
const BASE_URL = process.env.BASE_URL || 'http://localhost:5000';
const REGISTER_ENDPOINT = `${BASE_URL}/api/auth/register`;

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ API
 */
async function createUser(userData) {
  try {
    console.log(`üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userData.email} (${userData.role})`);
    
    const response = await fetch(REGISTER_ENDPOINT, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(userData)
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∏–ª–∏ –ª–∏ –º—ã HTML –≤–º–µ—Å—Ç–æ JSON (–∑–Ω–∞—á–∏—Ç endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω)
    const contentType = response.headers.get('content-type');
    if (contentType && contentType.includes('text/html')) {
      console.error(`‚ùå Endpoint ${REGISTER_ENDPOINT} –Ω–µ –Ω–∞–π–¥–µ–Ω (–ø–æ–ª—É—á–µ–Ω HTML –≤–º–µ—Å—Ç–æ JSON)`);
      return { 
        success: false, 
        error: 'Registration endpoint –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω', 
        isEndpointMissing: true 
      };
    }

    const responseData = await response.json();

    if (!response.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è ${userData.email}:`, responseData.error || 'Unknown error');
      return { success: false, error: responseData.error || 'Unknown error' };
    }

    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.email} (${userData.role})`);
    return { success: true, data: responseData };

  } catch (error) {
    console.error(`‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ ${userData.email}:`, error.message);
    return { success: false, error: error.message };
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è seed —Å–∫—Ä–∏–ø—Ç–∞
 */
async function runSeedScript() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ seed —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  console.log(`üì° API URL: ${REGISTER_ENDPOINT}`);
  console.log('üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è:');
  
  users.forEach(user => {
    console.log(`   - ${user.email} (${user.role})`);
  });
  
  console.log('');

  const results = [];
  
  // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
  for (const userData of users) {
    const result = await createUser(userData);
    results.push({
      email: userData.email,
      role: userData.role,
      ...result
    });
    
    // –ï—Å–ª–∏ endpoint –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    if (result.isEndpointMissing) {
      break;
    }
    
    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 500));
  }

  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  console.log('‚ïê'.repeat(50));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
  const endpointMissing = results.some(r => r.isEndpointMissing);
  
  if (endpointMissing) {
    console.log('‚ùå Registration endpoint /api/auth/register –Ω–µ –Ω–∞–π–¥–µ–Ω');
    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('');
    console.log('1. üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏:');
    console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ server/index.ts –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è registerRoutes()');
    console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    console.log('');
    console.log('2. üóÉÔ∏è –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:');
    console.log('   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ PostgreSQL');
    console.log('   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL INSERT –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('');
    console.log('3. üîå –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    console.log('   - OWNER_EMAIL=9791207@gmail.com');
    console.log('   - OWNER_PASSWORD=77GeoDav=');
    console.log('   - ADVERTISER_EMAIL=6484488@gmail.co');
    console.log('   - ADVERTISER_PASSWORD=7787877As');
    console.log('   - PARTNER_EMAIL=pablota096@gmail.com');
    console.log('   - PARTNER_PASSWORD=7787877As');
    console.log('   - ALLOW_SEED=1');
    console.log('   –ó–∞—Ç–µ–º –≤—ã–∑–≤–∞—Ç—å POST /api/dev/seed-users');
    console.log('');
    console.log('4. üìù SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä—è–º–æ–π –≤—Å—Ç–∞–≤–∫–∏ –≤ –ë–î:');
    console.log('');
    printSQLCommands();
    
    process.exit(1);
  }
  
  const successful = results.filter(r => r.success);
  const failed = results.filter(r => !r.success);

  successful.forEach(result => {
    console.log(`‚úÖ ${result.email} (${result.role}) - —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
  });

  if (failed.length > 0) {
    console.log('\n‚ùå –û—à–∏–±–∫–∏:');
    failed.forEach(result => {
      console.log(`   ${result.email} (${result.role}) - ${result.error}`);
    });
  }

  console.log(`\nüìà –ò—Ç–æ–≥–æ: ${successful.length} —É—Å–ø–µ—à–Ω–æ, ${failed.length} —Å –æ—à–∏–±–∫–∞–º–∏`);
  
  if (successful.length === users.length) {
    console.log('üéâ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    process.exit(0);
  } else {
    console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.');
    process.exit(1);
  }
}

/**
 * –ü–µ—á–∞—Ç—å SQL –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø—Ä—è–º–æ–π –≤—Å—Ç–∞–≤–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
 */
function printSQLCommands() {
  console.log('-- SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  console.log('-- (–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∏—Ö –≤ –≤–∞—à–µ–π PostgreSQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö)');
  console.log('');
  
  users.forEach(user => {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö—ç—à –ø–∞—Ä–æ–ª—è (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å bcrypt)
    console.log(`-- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email} (${user.role})`);
    console.log(`INSERT INTO users (email, username, role, password_hash, created_at) VALUES`);
    console.log(`  ('${user.email}', '${user.username}', '${user.role.toUpperCase()}', '$2b$10$HASH_PASSWORD', NOW());`);
    console.log('');
  });
  
  console.log('-- –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ó–∞–º–µ–Ω–∏—Ç–µ $2b$10$HASH_PASSWORD –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π bcrypt —Ö—ç—à –ø–∞—Ä–æ–ª—è');
  console.log('-- –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –ø–∞—Ä–æ–ª—è "77GeoDav=" —Ö—ç—à –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–∞–∫:');
  console.log('-- $2b$10$abcdef1234567890abcdef1234567890abcdef1234567890abcdef');
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
 */
async function checkApiAvailability() {
  try {
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API: ${BASE_URL}`);
    
    const response = await fetch(BASE_URL, {
      method: 'GET'
    });
    
    console.log(`‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω (HTTP ${response.status})`);
    return true;
  } catch (error) {
    console.error(`‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
    console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞', BASE_URL);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
(async () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    const apiAvailable = await checkApiAvailability();
    
    if (!apiAvailable) {
      console.log('\nüõë –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      process.exit(1);
    }

    console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await runSeedScript();
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
})();

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
 */
async function checkApiAvailability() {
  try {
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API: ${BASE_URL}`);
    
    const response = await fetch(BASE_URL, {
      method: 'GET',
      timeout: 5000
    });
    
    console.log(`‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω (HTTP ${response.status})`);
    return true;
  } catch (error) {
    console.error(`‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
    console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞', BASE_URL);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
(async () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    const apiAvailable = await checkApiAvailability();
    
    if (!apiAvailable) {
      console.log('\nüõë –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      process.exit(1);
    }

    console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await runSeedScript();
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
})();