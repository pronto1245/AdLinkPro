#!/usr/bin/env node

/**
 * Helper script –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ bcrypt —Ö—ç—à–µ–π –ø–∞—Ä–æ–ª–µ–π
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è SQL –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø—Ä—è–º–æ–π –≤—Å—Ç–∞–≤–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
 */

const bcrypt = require('bcrypt');

// –ü–∞—Ä–æ–ª–∏ –∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
const passwords = [
  { label: 'Super Admin (77GeoDav=)', password: '77GeoDav=' },
  { label: 'Advertiser (7787877As)', password: '7787877As' },
  { label: 'Affiliate (7787877As)', password: '7787877As' }
];

console.log('üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è bcrypt —Ö—ç—à–µ–π –¥–ª—è –ø–∞—Ä–æ–ª–µ–π...\n');

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö—ç—à–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
async function generateHashes() {
  for (const item of passwords) {
    try {
      const hash = await bcrypt.hash(item.password, 10);
      console.log(`${item.label}:`);
      console.log(`  –ü–∞—Ä–æ–ª—å: ${item.password}`);
      console.log(`  –•—ç—à:    ${hash}`);
      console.log('');
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ö—ç—à–∞ –¥–ª—è ${item.label}:`, error);
    }
  }
  
  console.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n');
  console.log('üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ö—ç—à–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Ö –≤ SQL –∫–æ–º–∞–Ω–¥–∞—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
}

generateHashes();